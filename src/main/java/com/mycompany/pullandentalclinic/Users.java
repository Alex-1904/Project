/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pullandentalclinic;

import com.mycompany.pullandentalclinic.AdminWindow;
import com.mycompany.pullandentalclinic.Staff;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Rebecca
 */
public class Users extends javax.swing.JFrame {

    /**
     * Creates new form Users
     */
    public Users() {
        initComponents();
        displayUsers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UsersTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        userssave = new javax.swing.JButton();
        usersedit = new javax.swing.JButton();
        stfdelete = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userscontact = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        usersreligion = new javax.swing.JTextField();
        usersusername = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        usersaccess = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        usersoccupation = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        usersname = new javax.swing.JTextField();
        usersemail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        usersgender = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        usersdob = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        usersage = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        usershaddress = new javax.swing.JTextField();
        userscityzipcode = new javax.swing.JTextField();
        userspass = new javax.swing.JTextField();
        usersid = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        reportsedit1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jLabel2.setText("Back");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        UsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Email", "Username", "Password", "Address", "CityZipCode", "Mobile#", "Religion", "Date of Birth", "Gender", "Age", "Occupation", "Access"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UsersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(UsersTable);

        jLabel12.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 102, 255));
        jLabel12.setText("Users");

        userssave.setText("Save");
        userssave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userssaveMouseClicked(evt);
            }
        });
        userssave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userssaveActionPerformed(evt);
            }
        });

        usersedit.setText("Edit");
        usersedit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userseditMouseClicked(evt);
            }
        });

        stfdelete.setText("Delete");
        stfdelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stfdeleteMouseClicked(evt);
            }
        });

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jLabel9.setText("City Zip Code");

        jLabel10.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jLabel10.setText("Mobile No. (+63)");

        jLabel3.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel3.setText("Username:");

        userscontact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userscontactFocusLost(evt);
            }
        });
        userscontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userscontactActionPerformed(evt);
            }
        });
        userscontact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userscontactKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel4.setText("Password:");

        usersreligion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersreligionActionPerformed(evt);
            }
        });

        usersusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersusernameActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jLabel11.setText("Religion");

        usersaccess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Staff" }));

        jLabel18.setText("Access Level");

        jLabel19.setText("Occupation");

        usersoccupation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersoccupationActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel6.setText("Name");

        usersname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersnameActionPerformed(evt);
            }
        });

        usersemail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usersemailFocusLost(evt);
            }
        });
        usersemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersemailActionPerformed(evt);
            }
        });
        usersemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usersemailKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel7.setText("E-mail");

        usersgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jLabel17.setText("Gender");

        jLabel8.setText("Date of Birth");

        usersage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersageActionPerformed(evt);
            }
        });
        usersage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usersageKeyTyped(evt);
            }
        });

        jLabel14.setText("Age");

        jLabel13.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        jLabel13.setText("Home Address");

        usershaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usershaddressActionPerformed(evt);
            }
        });

        userscityzipcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userscityzipcodeActionPerformed(evt);
            }
        });
        userscityzipcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userscityzipcodeKeyTyped(evt);
            }
        });

        usersid.setFocusable(false);
        usersid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersidActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel15.setText("ID");

        reportsedit1.setText("Generate Report");
        reportsedit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportsedit1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(300, 300, 300)
                                .addComponent(jLabel12))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(userssave)
                                    .addGap(12, 12, 12)
                                    .addComponent(usersedit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(stfdelete)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(reportsedit1))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(usersreligion))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(userscontact))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(userscityzipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(usershaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(usersusername, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(usersname, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(usersemail, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(usersid, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(93, 93, 93)))))
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userspass, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel18)
                            .addComponent(usersaccess, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(usersage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usersoccupation, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(usersdob, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(usersgender, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(136, 136, 136))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel12)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usersdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usersgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usersage, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usersoccupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usersaccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usersid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usersname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(usersemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usersusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userspass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usershaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userscityzipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userscontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usersreligion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userssave)
                    .addComponent(usersedit)
                    .addComponent(stfdelete)
                    .addComponent(reportsedit1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UsersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsersTableMouseClicked
        int selectedRow = UsersTable.getSelectedRow();
        if (selectedRow != -1) { // Ensure a row is selected
            TableModel model = UsersTable.getModel();

        // Populate the text fields with data from the selected row
            usersname.setText(model.getValueAt(selectedRow, 1).toString());
            usersemail.setText(model.getValueAt(selectedRow, 2).toString());
            usersusername.setText(model.getValueAt(selectedRow, 3).toString());
            userspass.setText(model.getValueAt(selectedRow, 4).toString());
            usershaddress.setText(model.getValueAt(selectedRow, 5).toString());
            userscityzipcode.setText(model.getValueAt(selectedRow, 6).toString());
            userscontact.setText(model.getValueAt(selectedRow, 7).toString());
            usersreligion.setText(model.getValueAt(selectedRow, 8).toString());

        // Date conversion for Date of Birth
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                java.util.Date date = dateFormat.parse(model.getValueAt(selectedRow, 9).toString());
                usersdob.setDate(date);
            } catch (Exception e) {
                e.printStackTrace();
            }
            String gender = model.getValueAt(selectedRow, 10).toString();
            usersgender.setSelectedItem(gender);
            usersage.setText(model.getValueAt(selectedRow, 11).toString());
            usersoccupation.setText(model.getValueAt(selectedRow, 12).toString());
            String access = model.getValueAt(selectedRow, 13).toString();
            usersaccess.setSelectedItem(access);
            
    }
    }//GEN-LAST:event_UsersTableMouseClicked

    private void userssaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userssaveMouseClicked
    if (usersname.getText().isEmpty() || usersemail.getText().isEmpty() || userspass.getText().isEmpty()|| usershaddress.getText().isEmpty() || userscityzipcode.getText().isEmpty() || userscontact.getText().isEmpty() || usersreligion.getText().isEmpty() || usersdob.getDate() == null || usersgender.getSelectedItem() == null || usersage.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Missing Information");
    } else {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
            String username = "root";
            String password = "root";

            Connection Con = DriverManager.getConnection(dbUrl, username, password);
            Statement St = Con.createStatement();

            // Get the highest usersid from the database and increment it
            ResultSet rs = St.executeQuery("SELECT MAX(usersid) FROM users");
            int nextusersId = 1;
            if (rs.next()) {
                nextusersId = rs.getInt(1) + 1;
            }

            String query = "INSERT INTO users (usersid, usersrealname, usersemail, usersusername, userspassword,  usershomeaddress, userscityzipcode, userscontact, usersreligion, usersdob, usersgender, usersage, usersoccupation, usersaccess) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement add = Con.prepareStatement(query);
            add.setInt(1, nextusersId);
            add.setString(2, usersname.getText());
            add.setString(3, usersemail.getText());
            add.setString(4, usersusername.getText());
            add.setString(5, userspass.getText());
            add.setString(6, usershaddress.getText());
            add.setString(7, userscityzipcode.getText());
            add.setString(8, userscontact.getText());
            add.setString(9, usersreligion.getText());
            add.setDate(10, new java.sql.Date(usersdob.getDate().getTime()));
            add.setString(11, usersgender.getSelectedItem().toString());
            add.setString(12, usersage.getText());
            add.setString(13, usersoccupation.getText());
            add.setString(14, usersaccess.getSelectedItem().toString());

            add.executeUpdate();
            JOptionPane.showMessageDialog(this, "User added successfully");

            // Clear the fields after successful insertion
            usersname.setText("");
            usersemail.setText("");
            usersusername.setText("");
            userspass.setText("");
            usershaddress.setText("");
            userscityzipcode.setText("");
            userscontact.setText("");
            usersreligion.setText("");
            usersdob.setDate(null);
            usersgender.setSelectedIndex(-1);
            usersage.setText("");
            usersoccupation.setText("");
            usersaccess.setSelectedIndex(-1);

            Con.close();
            displayUsers();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Patients.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_userssaveMouseClicked

    private void userssaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userssaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userssaveActionPerformed

    private void userseditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userseditMouseClicked
                                      
    int selectedRow = UsersTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a user to edit.");
    } else if (usersname.getText().isEmpty() || usersemail.getText().isEmpty() || userspass.getText().isEmpty() || usershaddress.getText().isEmpty() || userscityzipcode.getText().isEmpty() || userscontact.getText().isEmpty() || usersreligion.getText().isEmpty() || usersdob.getDate() == null || usersgender.getSelectedItem() == null || usersage.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Missing Information");
    } else {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
            String username = "root";
            String password = "root";

            Connection Con = DriverManager.getConnection(dbUrl, username, password);

            // Get the user ID from the selected row
            String userIdString = (String) UsersTable.getValueAt(selectedRow, 0);
            int usersid;
            try {
                usersid = Integer.parseInt(userIdString);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error: The selected user ID is not a valid integer.");
                return;
            }

            String query = "UPDATE users SET usersrealname = ?, usersemail = ?, usersusername = ?, userspassword = ?, usershomeaddress = ?, userscityzipcode = ?, userscontact = ?, usersreligion = ?, usersdob = ?, usersgender = ?, usersage = ?, usersoccupation = ?, usersaccess = ? WHERE usersid = ?";
            PreparedStatement update = Con.prepareStatement(query);
            update.setString(1, usersname.getText());
            update.setString(2, usersemail.getText());
            update.setString(3, usersusername.getText());
            update.setString(4, userspass.getText());
            update.setString(5, usershaddress.getText());
            update.setString(6, userscityzipcode.getText());
            update.setString(7, userscontact.getText());
            update.setString(8, usersreligion.getText());
            update.setDate(9, new java.sql.Date(usersdob.getDate().getTime()));
            update.setString(10, usersgender.getSelectedItem().toString());
            update.setString(11, usersage.getText());
            update.setString(12, usersoccupation.getText());
            update.setString(13, usersaccess.getSelectedItem().toString());
            update.setInt(14, usersid);

            int rowsUpdated = update.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "User updated successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Error: No user was updated.");
            }

            // Clear the fields after successful update
            usersname.setText("");
            usersemail.setText("");
            usersusername.setText("");
            userspass.setText("");
            usershaddress.setText("");
            userscityzipcode.setText("");
            userscontact.setText("");
            usersreligion.setText("");
            usersdob.setDate(null);
            usersgender.setSelectedIndex(-1);
            usersage.setText("");
            usersoccupation.setText("");
            usersaccess.setSelectedIndex(-1);

            Con.close();
            displayUsers();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Patients.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_userseditMouseClicked

    private void stfdeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stfdeleteMouseClicked


    }//GEN-LAST:event_stfdeleteMouseClicked

    private void userscontactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userscontactFocusLost

        String contactNumber = userscontact.getText().trim(); // Get the trimmed text from the textbox

        // Validate if the contact number is exactly 10 digits
        if (contactNumber.length() != 10 || !contactNumber.matches("\\d{10}")) {
            JOptionPane.showMessageDialog(null, "Invalid contact number.", "", JOptionPane.ERROR_MESSAGE);
            userscontact.requestFocus(); // Optionally, you can request focus back to the field for correction
        }
    }//GEN-LAST:event_userscontactFocusLost

    private void userscontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userscontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userscontactActionPerformed

    private void userscontactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userscontactKeyTyped

        char c = evt.getKeyChar();
        String currentText = userscontact.getText();

        // Allow backspace and delete keys
        if (c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) {
            return;
        }

        // Check if the character is a digit and the length is less than 10
        if (!Character.isDigit(c) || currentText.length() >= 10) {
            evt.consume(); // Ignore the key event
        }

    }//GEN-LAST:event_userscontactKeyTyped

    private void usersreligionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersreligionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usersreligionActionPerformed

    private void usersusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usersusernameActionPerformed

    private void usersoccupationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersoccupationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usersoccupationActionPerformed

    private void usersnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usersnameActionPerformed

    private void usersemailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usersemailFocusLost
        String email = usersemail.getText();
        // Email regex pattern for validation
        String emailPattern = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$";

        if (!email.matches(emailPattern)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid email address.");
            usersemail.requestFocus(); // Move focus back to the email field
        }
    }//GEN-LAST:event_usersemailFocusLost

    private void usersemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersemailActionPerformed

    }//GEN-LAST:event_usersemailActionPerformed

    private void usersemailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usersemailKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_usersemailKeyTyped

    private void usersageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usersageActionPerformed

    private void usersageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usersageKeyTyped

        char c = evt.getKeyChar();
        String currentText = usersage.getText();

        // Allow backspace and delete keys
        if (c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) {
            return;
        }

        // Check if the character is a digit and the length is less than 4
        if (!Character.isDigit(c) || currentText.length() >= 3) {
            evt.consume(); // Ignore the key event
        }
    }//GEN-LAST:event_usersageKeyTyped

    private void usershaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usershaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usershaddressActionPerformed

    private void userscityzipcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userscityzipcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userscityzipcodeActionPerformed

    private void userscityzipcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userscityzipcodeKeyTyped

        char c = evt.getKeyChar();
        String currentText = userscityzipcode.getText();

        // Allow backspace and delete keys
        if (c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) {
            return;
        }

        // Check if the character is a digit and the length is less than 4
        if (!Character.isDigit(c) || currentText.length() >= 4) {
            evt.consume(); // Ignore the key event
        }
    }//GEN-LAST:event_userscityzipcodeKeyTyped

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
            new AdminWindow().setVisible(true);
            dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void usersidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usersidActionPerformed

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
    String searchText = searchField.getText().trim();
if (!searchText.isEmpty()) {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);
        String query = "SELECT LPAD(CAST(usersid AS CHAR), 3, '0') AS formatted_usersid, usersrealname, usersusername, usersemail, usershomeaddress, userscityzipcode, userscontact, usersreligion, usersdob, usersgender, usersage, usersoccupation, usersaccess FROM users WHERE usersrealname LIKE ? OR usersusername LIKE ? OR CAST(usersid AS CHAR) LIKE ?";
        PreparedStatement searchStmt = Con.prepareStatement(query);
        searchStmt.setString(1, "%" + searchText + "%");
        searchStmt.setString(2, "%" + searchText + "%");
        searchStmt.setString(3, "%" + searchText + "%");

        ResultSet Rs = searchStmt.executeQuery();

        DefaultTableModel model = (DefaultTableModel) UsersTable.getModel();
        model.setRowCount(0);

        while (Rs.next()) {
            model.addRow(new Object[]{
                Rs.getString("formatted_usersid"),
                Rs.getString("usersrealname"),
                Rs.getString("usersusername"),
                Rs.getString("usersemail"),
                Rs.getString("usershomeaddress"),
                Rs.getString("userscityzipcode"),
                Rs.getString("userscontact"),
                Rs.getString("usersreligion"),
                Rs.getString("usersdob"),
                Rs.getString("usersgender"),
                Rs.getString("usersage"),
                Rs.getString("usersoccupation"),
                Rs.getString("usersaccess")
            });
        }
        Con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
} else {
    // If search text is empty, display all users
    displayUsers();
}
    }//GEN-LAST:event_searchFieldKeyTyped

    private void reportsedit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsedit1MouseClicked
        UsersReportGenerator.generateUsersReport();
    }//GEN-LAST:event_reportsedit1MouseClicked
    private void displayUsers() {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);
        Statement St = Con.createStatement();
        ResultSet Rs = St.executeQuery("SELECT LPAD(CAST(MAX(usersid) + 1 AS CHAR), 3, '0') AS next_usersid FROM users");

        if (Rs.next()) {
            String nextUserID = Rs.getString("next_usersid");
            usersid.setText(nextUserID);
            usersid.setEditable(false); // Make the text box non-editable
        }

        Rs = St.executeQuery("SELECT LPAD(CAST(usersid AS CHAR), 3, '0') AS formatted_usersid,usersrealname, usersemail, userspassword, usersusername, usershomeaddress, userscityzipcode, userscontact, usersreligion, usersdob, usersgender, usersage, usersoccupation, usersaccess FROM users");
        DefaultTableModel model = (DefaultTableModel) UsersTable.getModel();
        model.setRowCount(0);

        while (Rs.next()) {
            model.addRow(new Object[]{
                Rs.getString("formatted_usersid"),
                Rs.getString("usersrealname"),
                Rs.getString("usersemail"),
                Rs.getString("usersusername"),
                Rs.getString("userspassword"),
                Rs.getString("usershomeaddress"),
                Rs.getString("userscityzipcode"),
                Rs.getString("userscontact"),
                Rs.getString("usersreligion"),
                Rs.getString("usersdob"),
                Rs.getString("usersgender"),
                Rs.getString("usersage"),
                Rs.getString("usersoccupation"),
                Rs.getString("usersaccess")
            });
        }
        Con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
}
    
        public class UsersReportGenerator {

    public static void generateUsersReport() {
        String jrxmlFilePath = "C:\\Users\\Rebecca\\JaspersoftWorkspace\\MyReports\\users_report.jrxml";
        String outputPdfPath = "C:\\Users\\Rebecca\\Desktop\\Output\\users_report.pdf";

        Map<String, Object> parameters = new HashMap<>();
        // Add any parameters you need to pass to the report here

        JasperReportUtil.generateReport(jrxmlFilePath, outputPdfPath, parameters);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Users().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UsersTable;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reportsedit1;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton stfdelete;
    private javax.swing.JComboBox<String> usersaccess;
    private javax.swing.JTextField usersage;
    private javax.swing.JTextField userscityzipcode;
    private javax.swing.JTextField userscontact;
    private com.toedter.calendar.JDateChooser usersdob;
    private javax.swing.JButton usersedit;
    private javax.swing.JTextField usersemail;
    private javax.swing.JComboBox<String> usersgender;
    private javax.swing.JTextField usershaddress;
    private javax.swing.JTextField usersid;
    private javax.swing.JTextField usersname;
    private javax.swing.JTextField usersoccupation;
    private javax.swing.JTextField userspass;
    private javax.swing.JTextField usersreligion;
    private javax.swing.JButton userssave;
    private javax.swing.JTextField usersusername;
    // End of variables declaration//GEN-END:variables
}
